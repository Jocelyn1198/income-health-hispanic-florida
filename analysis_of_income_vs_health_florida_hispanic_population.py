# -*- coding: utf-8 -*-
"""Analysis of Income vs Health Florida Hispanic Population

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wB4VxKCzyNnHCiDBexTIyYJjbNESIv4u

# Topic: How Income Levels Affect Health Outcomes in the Hispanic Population in Florida
"""

#Load data and necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Read the CSV file
df_filtered = pd.read_csv("brfss_hispanic_fl.csv")
#Filtered for Florida (state code 12) and Hispanic (code 1)
# Changed 'df' to 'df_filtered'
df_filtered = df_filtered[(df_filtered["_STATE"] == 12) & (df_filtered["_HISPANC"] == 1)]
print(df_filtered.head())

"""###How does income level correlate with access to healthcare services among the Hispanic population in Florida?"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import pearsonr

uploaded = files.upload()
df = pd.read_csv(next(iter(uploaded))) #upload the data

df = df[['INCOME3', '_HLTHPL1']].copy()
df.columns = ['income', 'has_healthcare']
df = df[df['income'].between(1, 8)] #catagorize the data into select income levels
df = df[df['has_healthcare'].isin([1, 2])]

df['has_healthcare'] = df['has_healthcare'].map({1: 1, 2: 0})

corr, p_value = pearsonr(df['income'], df['has_healthcare']) #create correlation  value and evaluate P value
print(f'Correlation between income and healthcare access: {corr:.2f}')
print(f'P value: {p_value:.3f}')
if p_value < 0.05:
    print("Values are statistically significant.") #statisticalyl sig.
else:
    print("Values are not statistically significant.")

healthcare_rate = df.groupby('income')['has_healthcare'].mean().reset_index()
healthcare_rate['has_healthcare'] *= 100
 #plot the graph
plt.figure(figsize=(10, 6))
sns.barplot(x='income', y='has_healthcare', data=healthcare_rate, palette='deep', alpha=0.7)
plt.title('% Percentage with Healthcare Access by Income Group (Hispanic Pop. in FL.)')
plt.xlabel('Income Category (ranked 1 - 8; lowest - highest)')
plt.ylabel('% Percentage with Healthcare Access')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

"""##Does income predict the likelihood of having health insurance in the Hispanic community?"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Sample data
data = {
    'Income Level (USD)': [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000],
    'Probability of Having Insurance': [0.45, 0.55, 0.65, 0.72, 0.78, 0.83, 0.86, 0.89, 0.91, 0.93]
}

#Create DataFrame
df = pd.DataFrame(data)

#Set the style
sns.set(style="whitegrid")

#Create the plot
plt.figure(figsize=(10, 6))
sns.lineplot(x='Income Level (USD)', y='Probability of Having Insurance', data=df, marker='o')

#Add labels and title
plt.title('Probability of Having Health Insurance by Income Level')
plt.xlabel('Income Level (USD)')
plt.ylabel('Probability of Having Insurance')
plt.ylim(0, 1)  # Probability range
plt.tight_layout()

#Show plot
plt.show()

"""###What are the most common health issues in lower-income Hispanic individuals, and how do they compare with higher-income groups?"""

# Group income levels
def income_group(val):
    if val in [1, 2, 3]:  # Less than $25,000
        return 'Lower Income'
    elif val in [5, 6, 7, 8]:  # $35,000 or more
        return 'Higher Income'
    else:
        return 'Other'


df_filtered['IncomeGroup'] = df_filtered['INCOME3'].apply(income_group)

#focus on relevant health conditions
# Rename health variables for easier reading

df_filtered = df_filtered.rename(columns={
    'DIABETE4': 'Diabetes',
    'CVDINFR4': 'HeartAttack',
    'CVDSTRK3': 'Stroke',
    'ASTHMA3': 'Asthma',
    'HAVARTH4': 'Arthritis',
    'MENTHLTH': 'MentalHealthDays'
})

#compare how common each issue is in lower and higher income groups
# Only look at Lower and Higher Income

filtered_df = df_filtered[df_filtered['IncomeGroup'].isin(['Lower Income', 'Higher Income'])]

# Calculate percentage of people who said "yes" to having each condition
def calculate_prevalence(condition):
    return filtered_df.groupby('IncomeGroup')[condition].apply(lambda x: (x == 1).mean() * 100)

# Create a summary table
prevalence_summary = {
    'Diabetes': calculate_prevalence('Diabetes'),
    'HeartAttack': calculate_prevalence('HeartAttack'),
    'Stroke': calculate_prevalence('Stroke'),
    'Asthma': calculate_prevalence('Asthma'),
    'Arthritis': calculate_prevalence('Arthritis'),
    'AverageMentalHealthDays': filtered_df.groupby('IncomeGroup')['MentalHealthDays'].mean()
}

# Turn into a DataFrame to display
import pandas as pd
prevalence_df = pd.DataFrame(prevalence_summary).T
print(prevalence_df.round(2))

# Run chi-square tests for chronic conditions
from scipy.stats import chi2_contingency

conditions = ['Arthritis', 'HeartAttack', 'Stroke', 'Asthma']

for condition in conditions:
    table = pd.crosstab(filtered_df['IncomeGroup'], filtered_df[condition] == 1)
    chi2, p, _, _ = chi2_contingency(table)
    print(f"Chi-square test for {condition}:")
    print(f"  p-value: {p:.4f}")
    if p < 0.05:
        print("Statistically significant\n")
    else:
        print(" Not statistically significant\n")

#statistics to see if differences are real
#Are the differences we see in health conditions between income groups real
#— or just due to random chance?


from scipy.stats import chi2_contingency, ttest_ind

#chi sq test to see if difference is statistically significant
#table counting how many people in each income group do or don’t have diabetes.

contingency = pd.crosstab(filtered_df['IncomeGroup'], filtered_df['Diabetes'] == 1)

#Chi-square test to compare groups
chi2, p, _, _ = chi2_contingency(contingency)
print("Chi-square p-value for Diabetes:", p)

# For mental health (which is a number), we use a t-test
#Compare the average number of bad mental health days for the two groups
low = filtered_df[filtered_df['IncomeGroup'] == 'Lower Income']['MentalHealthDays'].dropna()
high = filtered_df[filtered_df['IncomeGroup'] == 'Higher Income']['MentalHealthDays'].dropna()
from scipy.stats import ttest_ind
t_stat, p_val = ttest_ind(low, high)
print("T-test p-value for Mental Health Days:", p_val)

#bar chart for health issues are more common in each group
import matplotlib.pyplot as plt

prevalence_df.drop('AverageMentalHealthDays').plot(kind='barh', figsize=(8, 5))
plt.title('Health Issues by Income Group')
plt.xlabel('Percent with Condition')
plt.grid(True)
plt.tight_layout()
plt.show()

"""conclusion: Using Python and basic statistics, we found that diabetes and arthritis are significantly more common in lower-income Hispanic individuals. This was shown using a chi-square test, and the difference was statistically significant. This shows that it is very likely that income level is related to diabetes risk in this population. We also saw that mental health struggles were slightly higher on average in the lower-income group, but not significantly(p-value was greater than 0.05)."""